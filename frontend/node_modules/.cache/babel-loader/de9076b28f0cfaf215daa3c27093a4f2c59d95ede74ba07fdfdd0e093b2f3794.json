{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    restaurant: null,\n    total: 0,\n    deliveryFee: 2.99,\n    tax: 0\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      var _state$restaurant;\n      const {\n        item,\n        restaurant\n      } = action.payload;\n\n      // If cart is empty or from different restaurant, clear cart\n      if (state.items.length === 0 || ((_state$restaurant = state.restaurant) === null || _state$restaurant === void 0 ? void 0 : _state$restaurant.id) !== restaurant.id) {\n        state.items = [];\n        state.restaurant = restaurant;\n      }\n      const existingItem = state.items.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.items.push({\n          ...item,\n          quantity: 1\n        });\n      }\n      cartSlice.caseReducers.calculateTotal(state);\n    },\n    removeFromCart: (state, action) => {\n      const itemId = action.payload;\n      state.items = state.items.filter(item => item.id !== itemId);\n      if (state.items.length === 0) {\n        state.restaurant = null;\n      }\n      cartSlice.caseReducers.calculateTotal(state);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        itemId,\n        quantity\n      } = action.payload;\n      const item = state.items.find(item => item.id === itemId);\n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(item => item.id !== itemId);\n        } else {\n          item.quantity = quantity;\n        }\n      }\n      if (state.items.length === 0) {\n        state.restaurant = null;\n      }\n      cartSlice.caseReducers.calculateTotal(state);\n    },\n    clearCart: state => {\n      state.items = [];\n      state.restaurant = null;\n      state.total = 0;\n      state.tax = 0;\n    },\n    calculateTotal: state => {\n      const subtotal = state.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n      state.tax = subtotal * 0.08; // 8% tax\n      state.total = subtotal + state.tax + (state.items.length > 0 ? state.deliveryFee : 0);\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","restaurant","total","deliveryFee","tax","reducers","addToCart","state","action","_state$restaurant","item","payload","length","id","existingItem","find","cartItem","quantity","push","caseReducers","calculateTotal","removeFromCart","itemId","filter","updateQuantity","clearCart","subtotal","reduce","sum","price","actions","reducer"],"sources":["C:/Users/shaik/CascadeProjects/food-delivery-platform/frontend/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    restaurant: null,\n    total: 0,\n    deliveryFee: 2.99,\n    tax: 0,\n  },\n  reducers: {\n    addToCart: (state, action) => {\n      const { item, restaurant } = action.payload;\n      \n      // If cart is empty or from different restaurant, clear cart\n      if (state.items.length === 0 || state.restaurant?.id !== restaurant.id) {\n        state.items = [];\n        state.restaurant = restaurant;\n      }\n      \n      const existingItem = state.items.find(cartItem => cartItem.id === item.id);\n      \n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.items.push({ ...item, quantity: 1 });\n      }\n      \n      cartSlice.caseReducers.calculateTotal(state);\n    },\n    \n    removeFromCart: (state, action) => {\n      const itemId = action.payload;\n      state.items = state.items.filter(item => item.id !== itemId);\n      \n      if (state.items.length === 0) {\n        state.restaurant = null;\n      }\n      \n      cartSlice.caseReducers.calculateTotal(state);\n    },\n    \n    updateQuantity: (state, action) => {\n      const { itemId, quantity } = action.payload;\n      const item = state.items.find(item => item.id === itemId);\n      \n      if (item) {\n        if (quantity <= 0) {\n          state.items = state.items.filter(item => item.id !== itemId);\n        } else {\n          item.quantity = quantity;\n        }\n      }\n      \n      if (state.items.length === 0) {\n        state.restaurant = null;\n      }\n      \n      cartSlice.caseReducers.calculateTotal(state);\n    },\n    \n    clearCart: (state) => {\n      state.items = [];\n      state.restaurant = null;\n      state.total = 0;\n      state.tax = 0;\n    },\n    \n    calculateTotal: (state) => {\n      const subtotal = state.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\n      state.tax = subtotal * 0.08; // 8% tax\n      state.total = subtotal + state.tax + (state.items.length > 0 ? state.deliveryFee : 0);\n    },\n  },\n});\n\nexport const { addToCart, removeFromCart, updateQuantity, clearCart } = cartSlice.actions;\nexport default cartSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}